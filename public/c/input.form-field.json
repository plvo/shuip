{
  "name": "input.form-field",
  "type": "registry:ui",
  "dependencies": [
    "react-hook-form"
  ],
  "files": [
    {
      "path": "input.form-field.tsx",
      "content": "'use client';\n\nimport { FormControl, FormDescription, FormField, FormItem, FormLabel, FormMessage } from '@/components/ui/form';\nimport { Input } from '@/components/ui/input';\nimport type { Control, Path } from 'react-hook-form';\n\nconst InputField = <TFieldValues extends Record<string, string>>({\n  control,\n  name,\n  label,\n  description,\n  ...props\n}: {\n  control: Control<TFieldValues>;\n  name: Path<TFieldValues>;\n  label: string;\n  description?: string;\n} & React.ComponentProps<typeof Input>) => {\n  return (\n    <FormField\n      control={control}\n      name={name}\n      render={({ field }) => {\n        if (!field) {\n          console.error('Field is missing for InputField', name);\n          return <></>;\n        }\n\n        return (\n          <FormItem className=\"space-y-1.5\">\n            <FormLabel className=\"flex items-center justify-between\">\n              {label}\n              <FormMessage className=\"max-sm:hidden text-sm\" />\n            </FormLabel>\n            <FormControl>\n              <Input {...field} {...props} />\n            </FormControl>\n            {description && <FormDescription>{description}</FormDescription>}\n            <FormMessage className=\"sm:hidden text-xs text-left\" />\n          </FormItem>\n        );\n      }}\n    />\n  );\n};\n\nexport default InputField;\n",
      "type": "registry:ui",
      "target": "./components/ui/shuip/input.form-field.tsx"
    }
  ],
  "registryDependencies": [
    "form",
    "input"
  ]
}
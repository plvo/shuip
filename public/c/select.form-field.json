{
  "name": "select.form-field",
  "type": "registry:ui",
  "dependencies": [
    "react-hook-form"
  ],
  "files": [
    {
      "path": "select.form-field.tsx",
      "content": "'use client';\n\nimport { FormControl, FormDescription, FormField, FormItem, FormLabel, FormMessage } from '@/components/ui/form';\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select';\nimport { Control, Path, PathValue } from 'react-hook-form';\n\nexport interface SelectOption {\n  value: string;\n  label: string;\n}\n\nexport interface SelectFieldProps<T extends Record<string, string>> {\n  control: Control<T>;\n  name: Path<T>;\n  values: SelectOption[];\n  defaultValues?: PathValue<T, Path<T>>;\n  label: string;\n  placeholder: string;\n  description?: string;\n}\n\nexport const SelectField = <TFieldValues extends Record<string, string>>({\n  control,\n  name,\n  values,\n  defaultValues,\n  label,\n  placeholder,\n  description,\n}: SelectFieldProps<TFieldValues>) => {\n  return (\n    <FormField\n      control={control}\n      name={name}\n      defaultValue={defaultValues}\n      render={({ field }) => (\n        <FormItem>\n          <FormLabel>{label}</FormLabel>\n          <Select onValueChange={field.onChange} defaultValue={field.value}>\n            <FormControl>\n              <SelectTrigger>\n                <SelectValue placeholder={placeholder} />\n              </SelectTrigger>\n            </FormControl>\n            <SelectContent>\n              {values.map((item) => (\n                <SelectItem key={item.value} value={item.value}>\n                  {item.label}\n                </SelectItem>\n              ))}\n            </SelectContent>\n          </Select>\n          {description && <FormDescription>{description}</FormDescription>}\n          <FormMessage />\n        </FormItem>\n      )}\n    />\n  );\n};\n",
      "type": "registry:ui",
      "target": "./components/ui/shuip/select.form-field.tsx"
    }
  ],
  "registryDependencies": [
    "form",
    "select"
  ]
}
{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "rhf-password-field",
  "type": "registry:ui",
  "dependencies": ["react-hook-form", "lucide-react"],
  "registryDependencies": ["form", "input-group", "tooltip"],
  "files": [
    {
      "path": "./registry/ui/rhf-password-field.tsx",
      "content": "'use client';\n\nimport { Eye, EyeOff, InfoIcon } from 'lucide-react';\nimport * as React from 'react';\nimport type { FieldPath, FieldValues, UseFormRegisterReturn } from 'react-hook-form';\nimport { FormControl, FormDescription, FormField, FormItem, FormLabel, FormMessage } from '@/components/ui/form';\nimport { InputGroup, InputGroupAddon, InputGroupButton, InputGroupInput } from '@/components/ui/input-group';\nimport { Tooltip, TooltipContent, TooltipTrigger } from '@/components/ui/tooltip';\n\nexport interface PasswordFieldProps<T extends FieldValues> extends React.ComponentProps<typeof InputGroupInput> {\n  register: UseFormRegisterReturn<FieldPath<T>>;\n  label?: string;\n  description?: string;\n  tooltip?: React.ReactNode;\n}\n\nexport function PasswordField<T extends FieldValues>({\n  register,\n  label,\n  description,\n  tooltip,\n  ...props\n}: PasswordFieldProps<T>) {\n  const [showPassword, setShowPassword] = React.useState(false);\n\n  const handleTogglePassword = React.useCallback(() => {\n    setShowPassword((prev) => !prev);\n  }, []);\n\n  return (\n    <FormField\n      {...register}\n      render={({ field, fieldState }) => {\n        return (\n          <FormItem data-invalid={fieldState.invalid}>\n            {label && <FormLabel>{label}</FormLabel>}\n            <FormControl>\n              <InputGroup>\n                <InputGroupInput\n                  {...field}\n                  type={showPassword ? 'text' : 'password'}\n                  placeholder='Enter password'\n                  aria-invalid={fieldState.invalid}\n                  {...props}\n                />\n                <InputGroupAddon align='inline-end'>\n                  <InputGroupButton aria-label='Toggle password' onClick={handleTogglePassword}>\n                    {showPassword ? <EyeOff className='size-4' /> : <Eye className='size-4' />}\n                  </InputGroupButton>\n\n                  {tooltip && (\n                    <Tooltip>\n                      <TooltipTrigger asChild>\n                        <InputGroupButton aria-label='Info' size='icon-xs'>\n                          <InfoIcon />\n                        </InputGroupButton>\n                      </TooltipTrigger>\n                      <TooltipContent>{tooltip}</TooltipContent>\n                    </Tooltip>\n                  )}\n                </InputGroupAddon>\n              </InputGroup>\n            </FormControl>\n            <FormMessage className='text-xs text-left opacity-80' />\n            {description && <FormDescription className='text-xs'>{description}</FormDescription>}\n          </FormItem>\n        );\n      }}\n    />\n  );\n}\n",
      "type": "registry:ui",
      "target": "./components/ui/shuip/react-hook-form/password-field.tsx"
    }
  ]
}

{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "button.theme",
  "type": "registry:ui",
  "dependencies": ["radix-ui", "next-themes", "lucide-react"],
  "registryDependencies": ["button"],
  "files": [
    {
      "path": "./registry/ui/button.theme.tsx",
      "content": "import { Button } from '@/components/ui/button';\nimport { Laptop, Moon, Sun } from 'lucide-react';\nimport { useTheme } from 'next-themes';\nimport * as React from 'react';\n\nexport interface ButtonThemeProps {\n  withText?: boolean;\n}\n\nexport default function ButtonTheme({ withText }: ButtonThemeProps) {\n  const { theme, setTheme } = useTheme();\n  const [currentTheme, setCurrentTheme] = React.useState<'system' | 'light' | 'dark'>('system');\n\n  React.useEffect(() => {\n    setCurrentTheme(theme as 'system' | 'light' | 'dark');\n  }, [theme]);\n\n  const cycleTheme = () => {\n    const themes: ('system' | 'light' | 'dark')[] = ['system', 'light', 'dark'];\n    const currentIndex = themes.indexOf(currentTheme);\n    const nextIndex = (currentIndex + 1) % themes.length;\n    setTheme(themes[nextIndex]);\n  };\n\n  return (\n    <Button variant='outline' size={withText ? 'default' : 'icon'} onClick={cycleTheme}>\n      {currentTheme === 'system' && <Laptop className='h-[1.2rem] w-[1.2rem]' />}\n      {currentTheme === 'light' && <Sun className='h-[1.2rem] w-[1.2rem]' />}\n      {currentTheme === 'dark' && <Moon className='h-[1.2rem] w-[1.2rem]' />}\n      {withText && (\n        <span className='ml-2 capitalize'>{currentTheme.charAt(0).toUpperCase() + currentTheme.slice(1)}</span>\n      )}\n      <span className='sr-only'>Toggle theme</span>\n    </Button>\n  );\n}\n",
      "type": "registry:ui",
      "target": "./components/ui/shuip/button.theme.tsx"
    }
  ]
}

{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "tsf-checkbox-field",
  "type": "registry:ui",
  "dependencies": ["@tanstack/react-form"],
  "registryDependencies": ["field", "checkbox"],
  "files": [
    {
      "path": "./registry/ui/tsf-checkbox-field.tsx",
      "content": "'use client';\n\nimport type { DeepKeys, ReactFormApi } from '@tanstack/react-form';\nimport { Checkbox } from '@/components/ui/checkbox';\nimport { Field, FieldDescription, FieldError, FieldLabel } from '@/components/ui/field';\n\nexport interface CheckboxFieldProps<TFormData, TName extends DeepKeys<TFormData>>\n  extends Omit<React.ComponentProps<typeof Checkbox>, 'checked' | 'onCheckedChange' | 'form'> {\n  form: ReactFormApi<TFormData, any, any, any, any, any, any, any, any, any, any, any>;\n  name: TName;\n  label: string;\n  boxLabel?: string;\n  description?: string;\n  fieldProps?: React.ComponentProps<'div'> & { orientation?: 'vertical' | 'horizontal' | 'responsive' };\n}\n\nexport function CheckboxField<TFormData, TName extends DeepKeys<TFormData>>({\n  form,\n  name,\n  label,\n  boxLabel,\n  description,\n  fieldProps,\n  ...checkboxProps\n}: CheckboxFieldProps<TFormData, TName>) {\n  return (\n    <form.Field name={name}>\n      {(field) => {\n        const hasErrors = field.state.meta.errors.length > 0;\n        const errors = field.state.meta.errors.join(', ');\n\n        return (\n          <Field data-invalid={hasErrors} {...fieldProps}>\n            <FieldLabel className='flex items-center justify-between'>\n              {label}\n              {hasErrors && <FieldError className='max-sm:hidden text-sm'>{errors}</FieldError>}\n            </FieldLabel>\n            <div className='flex items-center gap-2'>\n              <Checkbox\n                checked={field.state.value as boolean}\n                onCheckedChange={(checked) => field.handleChange(checked as any)}\n                id={field.name}\n                {...checkboxProps}\n              />\n              {boxLabel && (\n                <label htmlFor={field.name} className='text-sm cursor-pointer'>\n                  {boxLabel}\n                </label>\n              )}\n            </div>\n            {description && <FieldDescription>{description}</FieldDescription>}\n            {hasErrors && <FieldError className='sm:hidden text-xs text-left'>{errors}</FieldError>}\n          </Field>\n        );\n      }}\n    </form.Field>\n  );\n}\n",
      "type": "registry:ui",
      "target": "./components/ui/shuip/tanstack-form/checkbox-field.tsx"
    }
  ]
}

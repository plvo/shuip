name: Release Please

on:
  workflow_run:
    workflows: ["CI"]
    types: [completed]
    branches: [main]

permissions:
  contents: write
  issues: write
  pull-requests: write

jobs:
  create-release:
    name: "🚀 Create Release"
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    outputs:
      release_created: ${{ steps.release.outputs.release_created }}
      version: ${{ steps.release.outputs.version }}
      tag_name: ${{ steps.release.outputs.tag_name }}
      upload_url: ${{ steps.release.outputs.upload_url }}
    steps:
      - name: "📥 Checkout Code"
        uses: actions/checkout@v4

      - name: "📋 Run Release Please"
        uses: googleapis/release-please-action@v4
        id: release
        with:
          release-type: node
          token: ${{ secrets.GITHUB_TOKEN }}
          config-file: .github/release-please-config.json
          manifest-file: .github/.release-please-manifest.json

  build-and-upload:
    name: "🏗️ Build & Upload Assets"
    runs-on: ubuntu-latest
    needs: create-release
    if: ${{ needs.create-release.outputs.release_created == 'true' }}
    steps:
      - name: "📥 Checkout Released Code"
        uses: actions/checkout@v4
        with:
          ref: ${{ needs.create-release.outputs.tag_name }}

      - name: "🔧 Setup Bun Runtime"
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: "♻️ Restore Build Cache"
        id: cache-restore
        uses: actions/cache/restore@v3
        with:
          path: |
            dist/
            node_modules/
          key: build-${{ github.event.workflow_run.head_sha }}-${{ hashFiles('**/bun.lock') }}

      - name: "📦 Install Dependencies"
        if: steps.cache-restore.outputs.cache-hit != 'true'
        run: bun install

      - name: "🏗️ Build Project"
        if: steps.cache-restore.outputs.cache-hit != 'true'
        run: bun run build

      - name: "📦 Create Distribution Archive"
        run: bun pm pack --ignore-scripts --filename shuip-${{ needs.create-release.outputs.version }}.tar.gz

      - name: "📤 Upload Release Asset"
        uses: softprops/action-gh-release@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ needs.create-release.outputs.tag_name }}
          files: shuip-${{ needs.create-release.outputs.version }}.tar.gz
          make_latest: true
          generate_release_notes: true